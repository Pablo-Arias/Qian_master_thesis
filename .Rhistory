position = position_dodge(width = 0.4), aes(group = other_condition), size = 0.8) +
scale_color_manual(values = c("increase" = "red", "decrease" = "blue"),
name = "Other condition",
labels = c("increase smile", "decrease smile")) +
facet_wrap(~question_label, nrow = 1) +
labs(
x = "Participant condition",
y = "Participant Rating\n(relationship value in the SRM)",
title = "Figure 6. Psychological analysis"
) +
theme_minimal(base_size = 12)
# 展示图
print(g)
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_unique.csv")
# 2. 编码修正与标签映射
df <- df %>%
mutate(
participant_condition = recode(participant_condition, "S" = "decrease", "U" = "increase"),
other_condition = recode(other_condition, "S" = "decrease", "U" = "increase"),
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（为了绘图统一排序）
df$participant_condition <- factor(df$participant_condition, levels = c("increase", "decrease"))
df$other_condition <- factor(df$other_condition, levels = c("increase", "decrease"))
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 转换为长格式（将 measure.p 和 measure.t 合并到一列）
df_long <- df %>%
select(participant_condition, other_condition, question_label, perceiver_effect = measure.p, target_effect = measure.t) %>%
pivot_longer(cols = c(perceiver_effect, target_effect),
names_to = "effect_type", values_to = "effect_value")
# 5. 绘图：显示 perceiver_effect 和 target_effect 的变化趋势
g <- ggplot(df_long, aes(x = participant_condition, y = effect_value, color = other_condition, linetype = effect_type)) +
geom_jitter(width = 0.15, alpha = 0.2, size = 1) +
stat_summary(fun = mean, geom = "point", size = 2.5, position = position_dodge(width = 0.4)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, position = position_dodge(width = 0.4)) +
stat_summary(fun = mean, geom = "line", aes(group = interaction(other_condition, effect_type)), size = 0.8,
position = position_dodge(width = 0.4)) +
facet_wrap(~question_label, nrow = 1) +
scale_color_manual(values = c("increase" = "red", "decrease" = "blue"),
name = "Other condition",
labels = c("increase smile", "decrease smile")) +
scale_linetype_manual(values = c("perceiver_effect" = "solid", "target_effect" = "dashed"),
name = "Effect Type",
labels = c("Perceiver", "Target")) +
labs(
x = "Participant condition",
y = "SRM Individual Effect",
title = "Figure 6 Extended: Perceiver & Target Effects"
) +
theme_minimal(base_size = 12)
# 6. 显示图
print(g)
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_unique.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = measure.p)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Perceiver Effect (measure.p)",
title = "Perceiver Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_unique.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = measure.t)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Perceiver Effect (measure.p)",
title = "Perceiver Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_unique.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = measure.t)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Perceiver Effect (measure.t)",
title = "Perceiver Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_unique.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = relationship)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Perceiver Effect (measure.p)",
title = "Perceiver Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_unique.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = measure.t)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Perceiver Effect (measure.p)",
title = "Perceiver Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_unique.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = measure.t)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Perceiver Effect (measure.t)",
title = "Perceiver Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_unique.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = measure.t)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Target Effect (measure.t)",
title = "Target Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#perceiver SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_unique.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = measure.p)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Perceiver Effect (measure.p)",
title = "Perceiver Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#perceiver SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_unique.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = measure.p)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Perceiver Effect (measure.p)",
title = "Perceiver Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#perceiver SRM
# 1. 加载包
library(tidyverse)
library(dplyr)
library(TripleR)
library(lme4)
library(lmerTest)
library(ggplot2)
# 2. 假设数据已读入为 df
df <- read_csv("all_data_srm_unique.csv")
# 修正编码（S = decrease smile, U = increase smile）
df <- df %>%
mutate(
participant_condition = recode(participant_condition, "S" = "decrease", "U" = "increase"),
other_condition = recode(other_condition, "S" = "decrease", "U" = "increase")
)
# 映射标签
df$question_label <- recode(df$question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
# 设置因子顺序（保证图表排序和配色一致）
df$participant_condition <- factor(df$participant_condition, levels = c("increase", "decrease"))
df$other_condition <- factor(df$other_condition, levels = c("increase", "decrease"))
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 绘图
g <- ggplot(df, aes(x = participant_condition, y = measure.p, color = other_condition)) +
geom_jitter(width = 0.15, alpha = 0.2, size = 1.2) +  # 散点图层
stat_summary(fun = mean, geom = "point", size = 3,
position = position_dodge(width = 0.4)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2,
position = position_dodge(width = 0.4)) +
stat_summary(fun = mean, geom = "line",
position = position_dodge(width = 0.4), aes(group = other_condition), size = 0.8) +
scale_color_manual(values = c("increase" = "red", "decrease" = "blue"),
name = "Other condition",
labels = c("increase smile", "decrease smile")) +
facet_wrap(~question_label, nrow = 1) +
labs(
x = "Participant condition",
y = "Participant Rating\n(relationship value in the SRM)",
title = "Figure 6. Psychological analysis"
) +
theme_minimal(base_size = 12)
# 展示图
print(g)
#测试
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_all.csv")
#测试
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = measure.t)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Target Effect (measure.t)",
title = "Target Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#测试
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_all.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = measure.t)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Target Effect (measure.t)",
title = "Target Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#测试
#target SRM
library(tidyverse)
# 1. 读取数据
df <- read_csv("all_data_srm_all.csv")
# 2. 映射题目标签（可选美化）
df <- df %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
# 3. 设置因子顺序（保持绘图顺序一致）
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 4. 绘图
g <- ggplot(df, aes(x = question_label, y = relationship)) +
geom_jitter(width = 0.2, alpha = 0.2, color = "gray40", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3, color = "black") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.15, color = "black") +
labs(
x = "Question",
y = "Target Effect (measure.t)",
title = "Target Effect Across Questions (SRM)"
) +
theme_minimal(base_size = 12)
# 5. 展示图
print(g)
#测试
library(tidyverse)
# 假设你已经读取并清理好了数据为 df
df <- read_csv("all_data_srm_unique.csv") %>%
mutate(
question_label = recode(question_content,
"liked" = "A. Liked",
"other_liked" = "B. Other liked me",
"conversation_quality" = "C. Conversation quality",
"video_conf_quality" = "D. Video conference quality"
)
)
df$question_label <- factor(df$question_label,
levels = c("A. Liked", "B. Other liked me", "C. Conversation quality", "D. Video conference quality"))
# 绘图：每个小图表示一个问题类型，展示 measure.p
g <- ggplot(df, aes(x = participant_condition, y = measure.p, color = other_condition)) +
geom_jitter(width = 0.15, alpha = 0.2, size = 1.2) +
stat_summary(fun = mean, geom = "point", size = 3,
position = position_dodge(width = 0.4)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2,
position = position_dodge(width = 0.4)) +
stat_summary(fun = mean, geom = "line", aes(group = other_condition),
position = position_dodge(width = 0.4), size = 0.8) +
facet_wrap(~question_label, nrow = 1) +
scale_color_manual(values = c("increase" = "red", "decrease" = "blue")) +
labs(
title = "SRM Perceiver Effect by Question",
x = "Participant Condition",
y = "Perceiver Effect (measure.p)",
color = "Other Condition"
) +
theme_minimal(base_size = 12)
# 展示图
print(g)
